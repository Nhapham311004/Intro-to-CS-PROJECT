import torch
from torchvision.models.detection import fasterrcnn_resnet50_fpn
import torchvision.transforms as transforms
from PIL import Image
import cv2
from google.colab.patches import cv2_imshow
import os

model = fasterrcnn_resnet50_fpn(pretrained=True)
model.eval()

directory_path = '/content/drive/MyDrive/Lamborghini'
file_in_diretory = os.listdir(directory_path)
file_name = 'Test.jpg'
file_path = os.path.join(directory_path, file_name)
input_image = Image.open(file_path)
print(input_image)
transform = transforms.Compose([transforms.ToTensor()])
input_tensor = transform(input_image)
input_batch = input_tensor.unsqueeze(0)

with torch.no_grad():
    prediction = model(input_batch)


print(prediction)
prediction[0].keys()
boxes, labels, scores = prediction[0]["boxes"], prediction[0]["labels"], prediction[0]["scores"]
num =torch.argwhere(scores > 0.7).shape[0]
coco_names = ["person" , "bicycle" , "car" , "motorcycle" , "airplane" , "bus" , "train" , "truck" , "boat" , "traffic light" , "fire hydrant" , "street sign" , "stop sign" , "parking meter"]
font = cv2.FONT_HERSHEY_SIMPLEX
input_image = cv2.imread(file_path)
for i in range(num):
  x1, y1 , x2 , y2 = boxes[i].numpy().astype("int")
  class_name = coco_names[labels.numpy()[i] -1]
  input_image = cv2.rectangle (input_image , (x1, y1), (x2 , y2), (0, 255 ,0),1)
  input_image = cv2.putText(input_image, class_name, (x1, y1 -10), font, 0.5 , (255, 0 ,0), 1 ,cv2.LINE_AA)
  cv2_imshow(input_image)
